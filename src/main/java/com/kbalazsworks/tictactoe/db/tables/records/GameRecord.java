/*
 * This file is generated by jOOQ.
 */
package com.kbalazsworks.tictactoe.db.tables.records;


import com.kbalazsworks.tictactoe.db.tables.Game;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GameRecord extends UpdatableRecordImpl<GameRecord> implements Record3<Long, String, LocalDateTime> {

    private static final long serialVersionUID = -1150741105;

    /**
     * Setter for <code>public.game.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.game.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.game.starer_user_id</code>.
     */
    public void setStarerUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.game.starer_user_id</code>.
     */
    public String getStarerUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.game.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.game.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, String, LocalDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, String, LocalDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Game.GAME.ID;
    }

    @Override
    public Field<String> field2() {
        return Game.GAME.STARER_USER_ID;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Game.GAME.CREATED_AT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getStarerUserId();
    }

    @Override
    public LocalDateTime component3() {
        return getCreatedAt();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getStarerUserId();
    }

    @Override
    public LocalDateTime value3() {
        return getCreatedAt();
    }

    @Override
    public GameRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public GameRecord value2(String value) {
        setStarerUserId(value);
        return this;
    }

    @Override
    public GameRecord value3(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public GameRecord values(Long value1, String value2, LocalDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GameRecord
     */
    public GameRecord() {
        super(Game.GAME);
    }

    /**
     * Create a detached, initialised GameRecord
     */
    public GameRecord(Long id, String starerUserId, LocalDateTime createdAt) {
        super(Game.GAME);

        set(0, id);
        set(1, starerUserId);
        set(2, createdAt);
    }
}
